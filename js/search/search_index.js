var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.218,1,1.706]],["body/components/AppComponent.html",[0,1.439,1,2.252,2,2.558,3,1.614,4,0.666,5,1.682,6,1.682,7,1.682,8,1.682,9,0.48,10,1.328,11,1.328,12,2.444,13,2.037,14,1.695,15,2.02,16,1.401,17,2.558,18,3.096,19,1.695,20,2.02,21,3.096,22,2.02,23,2.558,24,0.48,25,0.862,26,1.474,27,1.439,28,2.444,29,3.722,30,2.015,31,3.096,32,1.663,33,1.013,34,2.558,35,2.252,36,3.459,37,2.558,38,2.8,39,2.8,40,2.8,41,1.695,42,2.127,43,1.682,44,2.558,45,1.682,46,0.921,47,0.065,48,1.695,49,0.782,50,2.146,51,1.663,52,1.695,53,3.096,54,0.884,55,2.146,56,1.682,57,1.682,58,1.226,59,2.552,60,1.682,61,2.558,62,1.682,63,1.608,64,1.37,65,1.108,66,1.401,67,1.665,68,1.401,69,1.665,70,1.682,71,1.682,72,1.682,73,2.558,74,1.682,75,1.682,76,1.682,77,1.682,78,1.682,79,1.682,80,1.682,81,1.37,82,1.401,83,0.666,84,0.666,85,1.695,86,2.037,87,0.782,88,1.682,89,0.567,90,0.334,91,1.682,92,2.037,93,1.682,94,1.682,95,1.682,96,1.682,97,0.921,98,1.682,99,2.015,100,1.682,101,1.682,102,1.328,103,2.558,104,1.328,105,1.328,106,2.015,107,1.226,108,1.328,109,1.328,110,1.328,111,1.682,112,1.682,113,2.02,114,2.02,115,2.02,116,2.02,117,1.665,118,2.02,119,2.02,120,1.37,121,2.02,122,1.665,123,2.02,124,2.02,125,2.355,126,2.355,127,2.015,128,2.02,129,2.02,130,2.558,131,1.401,132,2.02,133,2.558,134,2.02,135,2.731,136,2.558,137,2.02,138,2.558,139,2.558,140,1.189,141,1.189,142,1.189,143,2.558,144,2.02,145,2.558,146,2.558,147,2.558,148,1.682,149,2.558,150,1.682,151,3.096,152,1.682,153,1.682,154,1.682,155,2.015,156,1.682,157,2.558,158,2.558,159,2.558,160,1.682,161,1.682,162,1.682,163,1.682,164,1.682,165,1.682,166,3.096,167,3.096,168,2.558,169,1.328,170,1.682,171,1.682,172,1.682,173,1.682,174,1.682,175,3.096,176,1.682,177,2.558,178,1.682,179,1.682,180,1.682,181,1.682,182,1.682,183,1.682,184,1.682,185,1.682,186,1.682,187,3.92,188,1.682,189,1.682,190,2.558,191,2.558,192,2.558,193,1.682,194,0.782,195,1.682,196,1.328,197,1.682,198,1.682,199,0.921,200,1.682,201,1.682,202,2.558,203,2.02,204,1.682,205,3.459,206,1.682,207,1.682,208,1.682,209,0.031,210,0.031]],["title/classes/AppPage.html",[90,0.52,211,1.706]],["body/classes/AppPage.html",[3,1.623,4,1.317,9,0.949,14,2.433,24,0.949,33,1.623,42,2.156,47,0.064,54,1.324,64,1.317,81,1.623,89,1.121,90,0.66,107,1.837,120,1.317,127,2.165,203,2.626,209,0.05,210,0.05,211,2.668,212,2.165,213,2.626,214,4.638,215,4.638,216,4.638,217,4.638,218,3.326,219,4.851,220,3.326,221,4.443,222,3.326,223,3.326,224,3.326,225,3.326,226,3.326,227,3.326,228,3.326,229,3.326,230,4.099,231,3.326,232,3.326,233,3.326,234,2.626,235,2.626,236,3.326]],["title/injectables/DeviceDetectorService.html",[84,1.038,237,1.038]],["body/injectables/DeviceDetectorService.html",[3,0.986,4,0.379,9,0.273,14,0.524,16,1.362,24,0.273,25,0.547,26,1.199,27,1.796,30,2.516,32,0.379,33,0.642,35,1.62,38,1.056,39,1.056,40,1.056,41,0.524,42,2.054,46,1.859,47,0.065,48,1.859,49,1.578,50,2.24,51,1.686,52,1.859,54,1.185,55,0.888,58,1.644,63,1.5,64,1.45,65,1.2,66,1.658,67,1.814,68,1.658,69,2.21,81,0.986,82,0.524,83,0.379,84,0.642,87,0.445,89,0.839,90,0.19,97,0.888,99,0.623,106,2.619,107,1.736,120,0.837,125,1.525,126,1.525,131,1.362,140,2.133,141,1.752,142,2.209,155,1.056,194,0.754,199,1.157,209,0.02,210,0.02,237,0.642,238,0.956,239,2.07,240,2.438,241,0.445,242,2.2,243,1.278,244,1.622,245,1.622,246,2.663,247,1.668,248,1.965,249,1.965,250,1.622,251,0.956,252,1.622,253,1.056,254,1.281,255,2.144,256,0.956,257,1.281,258,1.375,259,3.321,260,1.965,261,1.814,262,1.157,263,1.965,264,1.62,265,1.965,266,1.965,267,2.2,268,1.281,269,1.668,270,1.622,271,0.956,272,1.281,273,1.281,274,1.281,275,0.956,276,1.281,277,0.956,278,0.956,279,1.965,280,1.281,281,0.956,282,0.755,283,0.956,284,1.965,285,1.668,286,1.281,287,1.281,288,0.956,289,3.431,290,3.051,291,2.21,292,0.956,293,1.281,294,1.281,295,0.956,296,2.391,297,2.516,298,1.281,299,0.956,300,1.281,301,0.956,302,0.956,303,0.956,304,0.956,305,0.956,306,0.956,307,0.956,308,0.956,309,0.642,310,0.956,311,0.956,312,0.956,313,0.623,314,0.755,315,1.281,316,0.755,317,0.445,318,1.281,319,0.623,320,1.056,321,1.056,322,2.455,323,1.157,324,0.755,325,0.623,326,1.965,327,1.971,328,2.794,329,2.391,330,0.755,331,1.525,332,1.525,333,1.525,334,2.391,335,0.755,336,0.755,337,0.623,338,0.755,339,2.2,340,0.755,341,0.755,342,0.755,343,1.281,344,1.281,345,1.281,346,1.281,347,0.755,348,1.281,349,1.281,350,1.281,351,1.281,352,1.281,353,1.281,354,1.281,355,1.281,356,1.281,357,1.281,358,1.281,359,1.965,360,0.755,361,1.668,362,2.2,363,2.2,364,1.668,365,1.62,366,0.755,367,2.391,368,0.755,369,1.281,370,0.755,371,0.755,372,1.281,373,0.623,374,0.755,375,0.755,376,1.62,377,2.2,378,1.281,379,1.281,380,0.755,381,1.281,382,1.658,383,1.668,384,1.281,385,1.281,386,0.755,387,0.755,388,0.755,389,0.888,390,0.755,391,0.755,392,0.755,393,0.755,394,0.755,395,0.623,396,0.755,397,0.755,398,0.755,399,0.755,400,0.755,401,0.755,402,0.755,403,0.755,404,0.755,405,0.755,406,0.755,407,0.755,408,1.281,409,0.755,410,0.623,411,1.281,412,1.668,413,0.755,414,0.755,415,0.755,416,0.755,417,0.755,418,0.755,419,0.755,420,0.755,421,1.281,422,1.965,423,1.668,424,2.2,425,0.755,426,0.623,427,0.755,428,1.281,429,0.755,430,0.755,431,0.755,432,0.755,433,0.755,434,0.755,435,1.281,436,0.755,437,0.623,438,1.281,439,0.623,440,0.755,441,1.668,442,0.755,443,1.668,444,0.755,445,1.056,446,0.755,447,0.755,448,0.755,449,1.668,450,0.755,451,0.755,452,0.755,453,0.755,454,0.755,455,0.755,456,0.755,457,0.755,458,0.755,459,0.755,460,0.755,461,1.668,462,0.755,463,1.668,464,1.281,465,1.281,466,0.755,467,1.281,468,0.755,469,0.755,470,0.755,471,0.755,472,0.755,473,0.755]],["title/interfaces/DeviceInfo.html",[26,1.038,317,1.218]],["body/interfaces/DeviceInfo.html",[3,1.14,4,0.479,9,0.345,14,0.662,16,1.577,24,0.345,25,0.665,26,1.347,27,1.339,30,2.215,32,0.479,35,0.787,47,0.065,51,0.781,52,1.863,54,0.971,55,0.662,58,1.576,63,1.739,64,1.576,65,1.166,66,1.965,67,2.215,68,1.965,69,2.52,81,1.14,82,0.662,83,0.479,84,0.479,87,0.562,89,0.971,90,0.24,97,1.079,99,0.787,106,2.52,107,1.806,120,0.781,125,1.367,126,1.367,131,1.577,140,2.104,141,1.739,142,2.194,155,1.283,194,0.916,199,1.367,209,0.024,210,0.024,237,0.781,239,0.562,240,0.662,241,0.562,242,2.687,243,1.14,246,2.065,247,0.955,248,0.955,249,0.955,253,0.787,254,0.955,255,2.221,257,0.955,258,1.283,259,3.282,260,1.557,261,1.625,262,0.916,263,1.557,264,1.283,265,1.557,266,1.557,267,1.971,268,0.955,269,0.955,272,0.955,273,0.955,274,0.955,276,0.955,279,1.557,280,0.955,284,1.971,285,1.557,286,0.955,287,0.955,289,3.282,290,2.955,291,1.875,293,0.955,294,0.955,296,2.505,297,2.591,298,0.955,300,0.955,309,0.479,313,0.787,314,0.955,315,1.557,316,0.955,317,0.562,318,1.557,319,0.787,320,1.283,321,1.283,322,2.56,323,1.367,324,0.955,325,0.787,326,2.274,327,2.215,328,3.056,329,2.687,330,0.955,331,1.737,332,1.737,333,1.737,334,2.687,335,0.955,336,0.955,337,0.787,338,0.955,339,2.505,340,0.955,341,0.955,342,0.955,343,1.557,344,1.557,345,1.557,346,1.557,347,0.955,348,1.557,349,1.557,350,1.557,351,1.557,352,1.557,353,1.557,354,1.557,355,1.557,356,1.557,357,1.557,358,1.557,359,2.274,360,0.955,361,1.971,362,2.505,363,2.505,364,1.971,365,1.875,366,0.955,367,2.687,368,0.955,369,1.557,370,0.955,371,0.955,372,1.557,373,0.787,374,0.955,375,0.955,376,1.875,377,2.505,378,1.557,379,1.557,380,0.955,381,1.557,382,1.863,383,1.971,384,1.557,385,1.557,386,0.955,387,0.955,388,0.955,389,1.079,390,0.955,391,0.955,392,0.955,393,0.955,394,0.955,395,0.787,396,0.955,397,0.955,398,0.955,399,0.955,400,0.955,401,0.955,402,0.955,403,0.955,404,0.955,405,0.955,406,0.955,407,0.955,408,1.557,409,0.955,410,0.787,411,1.557,412,1.971,413,0.955,414,0.955,415,0.955,416,0.955,417,0.955,418,0.955,419,0.955,420,0.955,421,1.557,422,2.274,423,1.971,424,2.505,425,0.955,426,0.787,427,0.955,428,1.557,429,0.955,430,0.955,431,0.955,432,0.955,433,0.955,434,0.955,435,1.557,436,0.955,437,0.787,438,1.557,439,0.787,440,0.955,441,1.971,442,0.955,443,1.971,444,0.955,445,1.283,446,0.955,447,0.955,448,0.955,449,1.971,450,0.955,451,0.955,452,0.955,453,0.955,454,0.955,455,0.955,456,0.955,457,0.955,458,0.955,459,0.955,460,0.955,461,1.971,462,0.955,463,1.971,464,1.557,465,1.557,466,0.955,467,1.557,468,0.955,469,0.955,470,0.955,471,0.955,472,0.955,473,0.955,474,1.209]],["title/pipes/KeysPipe.html",[19,1.434,475,1.434]],["body/pipes/KeysPipe.html",[3,1.314,4,1.314,9,0.948,11,2.621,15,2.621,16,1.817,19,2.241,33,1.314,42,1.543,46,1.817,47,0.064,48,2.431,49,1.543,50,1.817,51,1.885,54,0.948,58,1.314,81,1.314,83,1.314,89,1.119,90,0.659,107,1.314,144,3.66,169,2.621,194,1.543,209,0.05,210,0.05,255,2.064,322,2.431,365,2.89,389,1.817,475,2.241,476,3.319,477,2.621,478,4.094,479,4.44,480,3.319,481,4.094,482,3.319,483,3.319,484,4.094,485,3.319,486,3.319,487,4.094,488,4.094,489,3.319]],["title/classes/ReTree.html",[90,0.52,243,1.038]],["body/classes/ReTree.html",[3,1.051,4,1.051,9,0.758,24,0.758,25,1.195,27,2.124,33,1.404,41,2.186,42,2.065,46,2.186,47,0.065,48,2.186,49,1.856,50,1.453,51,1.051,54,1.14,58,1.582,59,2.309,65,1.095,89,0.895,90,0.527,107,1.951,135,2.8,209,0.044,210,0.044,212,1.728,235,3.366,239,2.124,243,1.404,246,2.975,255,2.273,297,1.728,309,1.582,327,2.309,445,2.309,490,2.096,491,2.654,492,2.654,493,2.654,494,2.654,495,3.994,496,3.546,497,3.546,498,3.546,499,3.546,500,3.546,501,3.966,502,2.654,503,3.546,504,3.546,505,2.654,506,2.654,507,4.263,508,3.546,509,2.654,510,2.654,511,2.654,512,2.654,513,2.654,514,3.546,515,3.546,516,2.654,517,2.654,518,2.654,519,3.994,520,2.654,521,2.654,522,3.546,523,2.654,524,2.654,525,2.654,526,2.654]],["title/contributing.html",[527,1.444,528,1.214,529,2.218]],["body/contributing.html",[9,0.803,32,1.113,47,0.057,117,1.83,120,1.113,122,1.83,128,2.908,129,2.22,134,2.22,137,2.22,199,1.539,209,0.045,210,0.045,262,1.307,264,2.675,282,2.22,309,1.459,331,1.539,373,1.83,376,1.83,395,1.83,437,1.83,530,4.108,531,3.683,532,2.811,533,3.683,534,2.811,535,4.108,536,3.244,537,3.683,538,2.811,539,2.811,540,3.683,541,2.22,542,3.683,543,4.108,544,4.108,545,2.908,546,3.443,547,3.683,548,2.811,549,1.83,550,2.811,551,2.811,552,2.811,553,4.526,554,2.811,555,4.108,556,2.908,557,4.526,558,2.811,559,4.526,560,2.811,561,3.574,562,3.574,563,4.108,564,2.811,565,3.683,566,2.811,567,2.22,568,2.811,569,2.811,570,2.811,571,2.811,572,2.811,573,2.811,574,2.22,575,2.811,576,2.811,577,2.811,578,2.811,579,2.811,580,2.811,581,2.811,582,2.811,583,2.811,584,2.811,585,2.811,586,3.683,587,4.108,588,4.108,589,2.908,590,2.22,591,2.811,592,3.683,593,2.811,594,2.811,595,2.811,596,2.22,597,2.811,598,2.811,599,2.811,600,3.683,601,2.811,602,2.22,603,2.811,604,3.683,605,2.811,606,2.811,607,2.811,608,2.811,609,2.811,610,2.811,611,2.811,612,2.811,613,2.811,614,2.811,615,2.811,616,2.811,617,2.811,618,2.811,619,2.811,620,2.811,621,2.811,622,2.22,623,2.811,624,2.811,625,2.811,626,2.811,627,2.811,628,2.811,629,2.811,630,2.811,631,2.811,632,2.22,633,2.017,634,2.811,635,2.811,636,2.811,637,2.22,638,1.307]],["title/coverage.html",[639,2.776]],["body/coverage.html",[0,1.154,1,1.616,9,0.709,10,1.96,13,1.856,19,1.359,26,0.983,47,0.064,58,0.983,63,1.154,65,1.207,84,0.983,90,0.673,131,1.359,196,1.96,209,0.042,210,0.042,211,1.616,213,1.96,234,1.96,237,0.983,239,2.341,240,2.748,241,1.794,243,0.983,261,1.616,262,1.154,309,0.983,317,1.154,323,1.359,389,2.823,439,1.616,475,1.359,477,1.96,490,1.96,549,1.616,639,1.96,640,2.482,641,2.482,642,2.482,643,2.676,644,3.39,645,5.137,646,1.616,647,2.482,648,3.39,649,5.123,650,2.482,651,2.482,652,2.482,653,2.482,654,3.39,655,1.96,656,2.482,657,2.482,658,4.341,659,2.482,660,2.482,661,2.482,662,2.482,663,4.96,664,2.482,665,2.482,666,2.482,667,2.482,668,2.482,669,2.482,670,2.482,671,2.482,672,2.482,673,2.482,674,2.482,675,2.482,676,2.482,677,2.482,678,2.482,679,2.482,680,2.482,681,2.482]],["title/dependencies.html",[633,1.214,682,2.041]],["body/dependencies.html",[47,0.064,64,1.688,65,0.85,83,1.404,85,1.942,86,1.942,87,1.648,92,1.942,209,0.052,210,0.052,682,2.309,683,3.546,684,5.084,685,3.546,686,3.546,687,4.57,688,3.546,689,3.546,690,3.546,691,3.546,692,3.546,693,3.546,694,3.546,695,3.546,696,2.309,697,3.546,698,3.546,699,3.546,700,3.546,701,3.546,702,3.546,703,3.546,704,3.546,705,3.546,706,3.546,707,3.546]],["title/miscellaneous/enumerations.html",[708,1.214,709,2.475]],["body/miscellaneous/enumerations.html",[24,1.062,47,0.062,51,1.972,65,0.891,68,2.4,97,2.4,140,2.038,141,2.038,142,2.038,209,0.054,210,0.054,239,1.728,240,2.036,241,2.167,319,2.854,320,2.854,321,2.854,708,2.036,709,2.936,710,4.384]],["title/miscellaneous/functions.html",[708,1.214,711,2.475]],["body/miscellaneous/functions.html",[13,2.601,24,1.111,47,0.06,54,1.285,55,2.13,209,0.055,210,0.055,643,3.072,646,3.093,708,2.13,711,3.072,712,4.502,713,3.891]],["title/index.html",[24,0.633,527,1.444,528,1.214]],["body/index.html",[0,1.741,12,1.56,13,1.865,20,1.56,22,1.56,25,0.666,26,0.782,27,1.341,28,1.56,32,1.142,33,0.782,38,1.878,39,1.878,40,1.286,41,1.082,47,0.064,49,1.341,52,1.082,54,1.188,59,1.286,63,1.341,64,1.483,65,1.18,66,1.082,81,1.779,82,1.082,83,1.349,84,1.578,85,2.278,86,2.411,87,0.918,89,1.263,90,0.573,92,2.051,102,2.278,104,1.56,105,1.56,108,1.56,109,1.56,110,1.56,113,1.56,114,1.56,115,1.56,116,1.56,117,1.286,118,1.56,119,1.56,120,0.782,121,1.56,122,1.878,123,1.56,124,2.69,125,1.579,126,1.865,127,2.594,132,1.56,140,1.341,141,1.341,142,1.341,209,0.035,210,0.035,237,1.142,241,0.918,243,0.782,253,1.286,255,0.918,258,1.878,262,1.934,309,1.349,313,1.286,322,2.181,323,1.579,325,1.286,337,1.878,382,1.082,426,1.878,501,1.56,528,1.082,536,1.56,545,1.56,546,1.56,556,1.56,561,2.278,562,2.278,567,2.278,574,3.285,589,2.278,590,1.56,596,1.56,602,1.56,622,1.56,633,1.579,637,3.392,638,0.918,646,2.708,655,2.278,682,1.286,696,1.878,714,1.976,715,1.976,716,1.976,717,1.976,718,1.976,719,1.976,720,1.976,721,1.976,722,2.69,723,1.976,724,1.976,725,1.976,726,1.976,727,1.976,728,1.976,729,1.976,730,1.976,731,1.976,732,1.976,733,1.976,734,1.976,735,1.976,736,1.976,737,1.976,738,1.976,739,1.976,740,1.976,741,1.976,742,1.976,743,1.976,744,1.976,745,1.976,746,1.976,747,1.976,748,1.976,749,1.976,750,1.976,751,1.976,752,1.976,753,1.976,754,1.976,755,1.976,756,1.976,757,3.746,758,4.625,759,1.976,760,2.885,761,1.976,762,1.976,763,1.976,764,2.885,765,1.976,766,1.976,767,1.976,768,1.976,769,1.976,770,1.976,771,2.885,772,2.885,773,2.885,774,3.746,775,1.976,776,1.976,777,1.976,778,2.885,779,1.976,780,2.885,781,1.976,782,1.976,783,1.976,784,1.976,785,1.976,786,1.976,787,1.976,788,1.976,789,2.885,790,1.976,791,1.976,792,1.976,793,1.976,794,1.976,795,1.976,796,1.976,797,1.976,798,1.56,799,1.976,800,1.976,801,1.976,802,1.976,803,1.976,804,1.976,805,2.278,806,1.976,807,1.976,808,1.976,809,1.976,810,1.976,811,1.976,812,1.976,813,1.976,814,1.976,815,1.976,816,1.976,817,1.976,818,2.885,819,1.976,820,1.976,821,1.976,822,1.976,823,1.976,824,1.976,825,1.976,826,1.976,827,1.976,828,3.407,829,1.976,830,1.976,831,1.976,832,1.976,833,1.976,834,2.885,835,1.976,836,1.976,837,1.976,838,1.976,839,1.286,840,1.976,841,1.976,842,1.976]],["title/license.html",[527,1.444,528,1.214,638,1.031]],["body/license.html",[47,0.05,209,0.05,210,0.05,291,2.169,332,1.824,333,1.824,549,2.169,632,2.631,638,1.549,696,2.169,722,3.24,798,2.631,805,2.631,839,2.169,843,4.447,844,3.332,845,3.332,846,2.631,847,4.104,848,3.332,849,3.332,850,3.332,851,3.332,852,3.332,853,3.332,854,4.104,855,5.006,856,3.332,857,3.332,858,4.447,859,3.332,860,4.104,861,3.332,862,3.332,863,3.332,864,3.332,865,3.332,866,3.332,867,3.332,868,3.332,869,3.332,870,4.104,871,3.332,872,3.332,873,3.332,874,3.332,875,3.332,876,3.332,877,4.104,878,4.104,879,3.332,880,3.332,881,3.332,882,3.332,883,3.332,884,3.332,885,3.332,886,3.332,887,3.332,888,3.332,889,3.332,890,3.332,891,3.332,892,3.332,893,3.332,894,3.332,895,3.332,896,3.332,897,3.332,898,3.332,899,3.332,900,3.332,901,3.332,902,3.332,903,3.332,904,3.332,905,3.332,906,3.332]],["title/modules.html",[907,2.776]],["body/modules.html",[47,0.057,209,0.057,210,0.057,907,3.192]],["title/overview.html",[908,2.776]],["body/overview.html",[0,1.837,47,0.056,194,2.282,209,0.056,210,0.056,212,2.573,237,1.565,317,1.837,410,2.573,475,2.164,908,3.12]],["title/properties.html",[25,1.057,633,1.214]],["body/properties.html",[25,1.243,32,1.46,47,0.062,65,1.203,85,2.019,86,2.544,92,2.388,209,0.054,210,0.054,331,2.019,332,2.019,333,2.019,382,2.019,541,2.911,638,1.714,839,2.4,846,2.911,909,3.687,910,3.687,911,3.687,912,3.687,913,3.687,914,3.687,915,3.687,916,3.687,917,3.687,918,4.363,919,3.687,920,3.687,921,3.687]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":389,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"coverage.html":{}}}],["0.15.0",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["08/11/2016",{"_index":494,"title":{},"body":{"classes/ReTree.html":{}}}],["1",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"overview.html":{}}}],["1.3.3",{"_index":728,"title":{},"body":{"index.html":{}}}],["1.3.5",{"_index":730,"title":{},"body":{"index.html":{}}}],["1.4.1",{"_index":732,"title":{},"body":{"index.html":{}}}],["1.4.5",{"_index":734,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["10.1.0",{"_index":909,"title":{},"body":{"properties.html":{}}}],["10.x",{"_index":735,"title":{},"body":{"index.html":{}}}],["10.x.x",{"_index":754,"title":{},"body":{"index.html":{}}}],["100",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["100px",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["11.x",{"_index":737,"title":{},"body":{"index.html":{}}}],["12.x",{"_index":739,"title":{},"body":{"index.html":{}}}],["13",{"_index":346,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["13.x",{"_index":741,"title":{},"body":{"index.html":{}}}],["14.5.5",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["14.x",{"_index":743,"title":{},"body":{"index.html":{}}}],["15.x",{"_index":745,"title":{},"body":{"index.html":{}}}],["16",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["16.x",{"_index":747,"title":{},"body":{"index.html":{}}}],["17.x",{"_index":749,"title":{},"body":{"index.html":{}}}],["18.x",{"_index":751,"title":{},"body":{"index.html":{}}}],["19.x",{"_index":753,"title":{},"body":{"index.html":{}}}],["2",{"_index":410,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"overview.html":{}}}],["2.0.5",{"_index":736,"title":{},"body":{"index.html":{}}}],["2.1.0",{"_index":738,"title":{},"body":{"index.html":{}}}],["2.6.3",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["20.x",{"_index":755,"title":{},"body":{"index.html":{}}}],["2021",{"_index":845,"title":{},"body":{"license.html":{}}}],["20px",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["3.x.x",{"_index":740,"title":{},"body":{"index.html":{}}}],["34",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["4.18.2",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["4.x.x",{"_index":742,"title":{},"body":{"index.html":{}}}],["40px",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["4px",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["5.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["5.x.x",{"_index":744,"title":{},"body":{"index.html":{}}}],["6",{"_index":714,"title":{},"body":{"index.html":{}}}],["6.x.x",{"_index":746,"title":{},"body":{"index.html":{}}}],["600px",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.1",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["7.x",{"_index":729,"title":{},"body":{"index.html":{}}}],["7.x.x",{"_index":748,"title":{},"body":{"index.html":{}}}],["8.0.0",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["8.x",{"_index":731,"title":{},"body":{"index.html":{}}}],["8.x.x",{"_index":750,"title":{},"body":{"index.html":{}}}],["8/23",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["9.x",{"_index":733,"title":{},"body":{"index.html":{}}}],["9.x.x",{"_index":752,"title":{},"body":{"index.html":{}}}],["__buttons",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["__input",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["above",{"_index":876,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["accessible",{"_index":273,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["accessors",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["action",{"_index":900,"title":{},"body":{"license.html":{}}}],["active",{"_index":599,"title":{},"body":{"contributing.html":{}}}],["actual_component",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["agains",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["agent",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["ahsan",{"_index":332,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"license.html":{},"properties.html":{}}}],["ahsanayaz",{"_index":493,"title":{},"body":{"classes/ReTree.html":{}}}],["align",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":373,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["amazing",{"_index":832,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":868,"title":{},"body":{"license.html":{}}}],["android",{"_index":426,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["angular",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["angular/animations",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":813,"title":{},"body":{"index.html":{}}}],["angular/cliexample",{"_index":816,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"dependencies.html":{},"index.html":{}}}],["angular/compiler",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["angular/web",{"_index":840,"title":{},"body":{"index.html":{}}}],["angular18",{"_index":915,"title":{},"body":{"properties.html":{}}}],["angular19",{"_index":916,"title":{},"body":{"properties.html":{}}}],["angular2",{"_index":834,"title":{},"body":{"index.html":{}}}],["angular20",{"_index":917,"title":{},"body":{"properties.html":{}}}],["angular5",{"_index":911,"title":{},"body":{"properties.html":{}}}],["angular6",{"_index":912,"title":{},"body":{"properties.html":{}}}],["angular7",{"_index":913,"title":{},"body":{"properties.html":{}}}],["angular8",{"_index":914,"title":{},"body":{"properties.html":{}}}],["aot",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["apis",{"_index":400,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.server.module.ts",{"_index":795,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["apply",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["applydevice",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["applydevice(useragent",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["apppage",{"_index":211,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["arising",{"_index":904,"title":{},"body":{"license.html":{}}}],["array.isarray(regex",{"_index":524,"title":{},"body":{"classes/ReTree.html":{}}}],["array.isarray(regex.and",{"_index":517,"title":{},"body":{"classes/ReTree.html":{}}}],["array.isarray(regex.or",{"_index":520,"title":{},"body":{"classes/ReTree.html":{}}}],["ask",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["assigned",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["associated",{"_index":856,"title":{},"body":{"license.html":{}}}],["author",{"_index":331,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{},"properties.html":{}}}],["authors",{"_index":894,"title":{},"body":{"license.html":{}}}],["available",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ayaz",{"_index":333,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"license.html":{},"properties.html":{}}}],["back",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["backwards",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["badges",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["based",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["before",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["best",{"_index":717,"title":{},"body":{"index.html":{}}}],["block",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["boilerplate",{"_index":836,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["bootstrap",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["branch",{"_index":595,"title":{},"body":{"contributing.html":{}}}],["break",{"_index":436,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["browser",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"dependencies.html":{},"index.html":{}}}],["browser.get",{"_index":229,"title":{},"body":{"classes/AppPage.html":{}}}],["browser_version",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["browser_versions_re",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["browser_versions_re_map",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["browserdistfolder",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["browsers",{"_index":261,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["browsers_re",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["bug",{"_index":553,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":541,"title":{},"body":{"contributing.html":{},"properties.html":{}}}],["build",{"_index":811,"title":{},"body":{"index.html":{}}}],["buildrun",{"_index":812,"title":{},"body":{"index.html":{}}}],["built",{"_index":715,"title":{},"body":{"index.html":{}}}],["button",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["c",{"_index":844,"title":{},"body":{"license.html":{}}}],["case",{"_index":344,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["catch",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["cd",{"_index":817,"title":{},"body":{"index.html":{}}}],["center",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":822,"title":{},"body":{"index.html":{}}}],["change_log.md",{"_index":824,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["changelog.md",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["changes",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["characteristics",{"_index":267,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["charge",{"_index":851,"title":{},"body":{"license.html":{}}}],["check",{"_index":296,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["checks",{"_index":279,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["child",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["ci",{"_index":598,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":897,"title":{},"body":{"license.html":{}}}],["class",{"_index":90,"title":{"classes/AppPage.html":{},"classes/ReTree.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":212,"title":{},"body":{"classes/AppPage.html":{},"classes/ReTree.html":{},"overview.html":{}}}],["cli",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["column",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["comment",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":396,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["commonengine",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["community",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["compares",{"_index":463,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["compatibility",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["compatible",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{}}}],["conditions",{"_index":875,"title":{},"body":{"license.html":{}}}],["config",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["connection",{"_index":905,"title":{},"body":{"license.html":{}}}],["console.log('hello",{"_index":767,"title":{},"body":{"index.html":{}}}],["console.log('ua",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(isdesktopdevice",{"_index":776,"title":{},"body":{"index.html":{}}}],["console.log(ismobile",{"_index":770,"title":{},"body":{"index.html":{}}}],["console.log(istablet",{"_index":775,"title":{},"body":{"index.html":{}}}],["console.log(this.deviceinfo",{"_index":769,"title":{},"body":{"index.html":{}}}],["const",{"_index":322,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"index.html":{}}}],["constants",{"_index":315,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.browser_versions_re[this.browser",{"_index":444,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.browsers.unknown",{"_index":442,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.desktop_devices.includes(this.device",{"_index":473,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.device",{"_index":348,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices",{"_index":430,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.android",{"_index":428,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.unknown",{"_index":471,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices_re",{"_index":432,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.general.uknown",{"_index":372,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.mobiles_re[key",{"_index":468,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.tablets_re[ipad",{"_index":350,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.tablets_re[key",{"_index":470,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.unknown",{"_index":371,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[`${mapping.const}_re",{"_index":342,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[key",{"_index":370,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const",{"_index":340,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"classes/ReTree.html":{},"index.html":{}}}],["constructor(...args",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(@inject(platform_id",{"_index":325,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["constructor(platformid",{"_index":251,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["container",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["contract",{"_index":901,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":529,"title":{"contributing.html":{}},"body":{}}],["conventional",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":870,"title":{},"body":{"license.html":{}}}],["copy",{"_index":854,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":843,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":639,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["created",{"_index":492,"title":{},"body":{"classes/ReTree.html":{}}}],["creator",{"_index":835,"title":{},"body":{"index.html":{}}}],["credits",{"_index":826,"title":{},"body":{"index.html":{}}}],["current",{"_index":289,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["cursor",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["d.ts",{"_index":804,"title":{},"body":{"index.html":{}}}],["damages",{"_index":898,"title":{},"body":{"license.html":{}}}],["deal",{"_index":857,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":906,"title":{},"body":{"license.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["defined",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["demo",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"index.html":{}}}],["demoapp",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":682,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["deprecated",{"_index":721,"title":{},"body":{"index.html":{}}}],["deprecation/deprecation",{"_index":357,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["desc",{"_index":334,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["description",{"_index":491,"title":{},"body":{"classes/ReTree.html":{}}}],["desktop",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["desktop_devices",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["despite",{"_index":386,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["details",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["detectdesktopmode",{"_index":244,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detectdesktopmode(ua",{"_index":254,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["detectfrommapping",{"_index":245,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detectfrommapping(ua",{"_index":268,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["detection",{"_index":382,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{},"properties.html":{}}}],["detector",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["detector.constants",{"_index":316,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["detector.constants.ts",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["detector.git",{"_index":921,"title":{},"body":{"properties.html":{}}}],["detector.git/issues",{"_index":919,"title":{},"body":{"properties.html":{}}}],["detector.service.ts",{"_index":241,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["detector.service.ts:142",{"_index":283,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:159",{"_index":278,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:174",{"_index":301,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:239",{"_index":275,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:260",{"_index":295,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:280",{"_index":299,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:309",{"_index":288,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:322",{"_index":292,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:38",{"_index":311,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:39",{"_index":312,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:40",{"_index":307,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:41",{"_index":302,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:42",{"_index":304,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:43",{"_index":308,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:44",{"_index":303,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:45",{"_index":310,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:46",{"_index":305,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:47",{"_index":306,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:48",{"_index":252,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:61",{"_index":271,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:96",{"_index":256,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector/src/lib/device",{"_index":240,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["detector/src/lib/retree.ts",{"_index":490,"title":{},"body":{"classes/ReTree.html":{},"coverage.html":{}}}],["detector/src/lib/retree.ts:10",{"_index":505,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/lib/retree.ts:17",{"_index":509,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/lib/retree.ts:39",{"_index":502,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/lib/retree.ts:6",{"_index":498,"title":{},"body":{"classes/ReTree.html":{}}}],["detects",{"_index":257,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["developers",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":800,"title":{},"body":{"index.html":{}}}],["device",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"properties.html":{}}}],["deviceconstants",{"_index":429,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["deviceconstants[key",{"_index":435,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicedetectorservice",{"_index":84,"title":{"injectables/DeviceDetectorService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"index.html":{}}}],["deviceinfo",{"_index":26,"title":{"interfaces/DeviceInfo.html":{}},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"index.html":{}}}],["devicemotionevent",{"_index":403,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["deviceorientationevent",{"_index":404,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["deviceregexmap",{"_index":431,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["deviceregexmap[key",{"_index":434,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devices",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["devices_re",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["deviceservice",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["devicetype",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["devicetype.desktop",{"_index":381,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.mobile",{"_index":378,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.tablet",{"_index":379,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.unknown",{"_index":459,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devs",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["different",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["dimensions",{"_index":285,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["direction",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["disable",{"_index":354,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["display",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["distribute",{"_index":866,"title":{},"body":{"license.html":{}}}],["docs",{"_index":589,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["docs/readme",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":549,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["dynamic",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":727,"title":{},"body":{"index.html":{}}}],["earlier",{"_index":724,"title":{},"body":{"index.html":{}}}],["early",{"_index":362,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["element",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["element(by.css('app",{"_index":230,"title":{},"body":{"classes/AppPage.html":{}}}],["element.all(by.css('app",{"_index":233,"title":{},"body":{"classes/AppPage.html":{}}}],["elementarrayfinder",{"_index":221,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["enhance",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["enum",{"_index":318,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["enumerations",{"_index":709,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["epicfunction",{"_index":766,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":353,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["etc",{"_index":774,"title":{},"body":{"index.html":{}}}],["evaluation",{"_index":455,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["event",{"_index":893,"title":{},"body":{"license.html":{}}}],["example",{"_index":758,"title":{},"body":{"index.html":{}}}],["examples",{"_index":548,"title":{},"body":{"contributing.html":{}}}],["exec",{"_index":496,"title":{},"body":{"classes/ReTree.html":{}}}],["exec(str",{"_index":500,"title":{},"body":{"classes/ReTree.html":{}}}],["existing",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["exit",{"_index":363,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["explain",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"index.html":{}}}],["express",{"_index":696,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["express.express",{"_index":713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["express.tokens.ts",{"_index":783,"title":{},"body":{"index.html":{}}}],["expressjs",{"_index":782,"title":{},"body":{"index.html":{}}}],["extends",{"_index":790,"title":{},"body":{"index.html":{}}}],["fa",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":297,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["far",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["fast",{"_index":837,"title":{},"body":{"index.html":{}}}],["feature",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["feedback",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"contributing.html":{},"coverage.html":{}}}],["files",{"_index":805,"title":{},"body":{"index.html":{},"license.html":{}}}],["finally",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["find",{"_index":360,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["first",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["fitness",{"_index":889,"title":{},"body":{"license.html":{}}}],["fix",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["flex",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["following",{"_index":798,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["fork",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":437,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["free",{"_index":850,"title":{},"body":{"license.html":{}}}],["function",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":711,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":873,"title":{},"body":{"license.html":{}}}],["g",{"_index":815,"title":{},"body":{"index.html":{}}}],["general",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["generate",{"_index":801,"title":{},"body":{"index.html":{}}}],["generator",{"_index":838,"title":{},"body":{"index.html":{}}}],["genuinely",{"_index":380,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["getdemoheadingtext",{"_index":214,"title":{},"body":{"classes/AppPage.html":{}}}],["getdeviceinfo",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["getdeviceinfoelements",{"_index":215,"title":{},"body":{"classes/AppPage.html":{}}}],["getisdesktop",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["getismobile",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["getistablet",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["getparagraphtext",{"_index":216,"title":{},"body":{"classes/AppPage.html":{}}}],["getregex",{"_index":497,"title":{},"body":{"classes/ReTree.html":{}}}],["getregex(pattern",{"_index":504,"title":{},"body":{"classes/ReTree.html":{}}}],["getting",{"_index":527,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["going",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["good",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":849,"title":{},"body":{"license.html":{}}}],["h1')).gettext",{"_index":236,"title":{},"body":{"classes/AppPage.html":{}}}],["hack",{"_index":347,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["handle",{"_index":425,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hardware",{"_index":293,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hasdevicemotion",{"_index":402,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hasmobilebrowsersignatures",{"_index":247,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hasmobilebrowsersignatures(ua",{"_index":277,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["hasmobilescreendimensions",{"_index":248,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hasmobilescreensize",{"_index":392,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hasn't",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["hasorientationsupport",{"_index":397,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hastouch",{"_index":387,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["heading",{"_index":231,"title":{},"body":{"classes/AppPage.html":{}}}],["height",{"_index":412,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["help",{"_index":536,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["helper",{"_index":799,"title":{},"body":{"index.html":{}}}],["helping",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["helps",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{},"index.html":{}}}],["here",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["hereby",{"_index":848,"title":{},"body":{"license.html":{}}}],["heuristics",{"_index":391,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["holders",{"_index":895,"title":{},"body":{"license.html":{}}}],["holds",{"_index":797,"title":{},"body":{"index.html":{}}}],["home",{"_index":760,"title":{},"body":{"index.html":{}}}],["home.component.html",{"_index":762,"title":{},"body":{"index.html":{}}}],["home.component.scss",{"_index":761,"title":{},"body":{"index.html":{}}}],["homecomponent",{"_index":763,"title":{},"body":{"index.html":{}}}],["host",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["hover",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":764,"title":{},"body":{"index.html":{}}}],["https://github.com/ahsanayaz/ngx",{"_index":918,"title":{},"body":{"properties.html":{}}}],["i've",{"_index":719,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":778,"title":{},"body":{"index.html":{}}}],["icon",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["idea",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["identifier",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["img",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":483,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["implied",{"_index":885,"title":{},"body":{"license.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"index.html":{}}}],["important",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["improve",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["improves",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["included",{"_index":879,"title":{},"body":{"license.html":{}}}],["including",{"_index":860,"title":{},"body":{"license.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indexhtml",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["indicates",{"_index":374,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["indicators",{"_index":383,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["indicators.hastouch",{"_index":405,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["info.key",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["info.value",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["information",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{},"index.html":{}}}],["initial",{"_index":336,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["initiated",{"_index":338,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["inject",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["inject(devicedetectorservice",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(request",{"_index":791,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":237,"title":{"injectables/DeviceDetectorService.html":{}},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["injectiontoken",{"_index":784,"title":{},"body":{"index.html":{}}}],["injectiontoken('request",{"_index":785,"title":{},"body":{"index.html":{}}}],["injectiontoken('response');universal",{"_index":786,"title":{},"body":{"index.html":{}}}],["input",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["inserted",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["inspired",{"_index":827,"title":{},"body":{"index.html":{}}}],["install",{"_index":757,"title":{},"body":{"index.html":{}}}],["installation",{"_index":756,"title":{},"body":{"index.html":{}}}],["installed",{"_index":814,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":515,"title":{},"body":{"classes/ReTree.html":{}}}],["interface",{"_index":317,"title":{"interfaces/DeviceInfo.html":{}},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":474,"title":{},"body":{"interfaces/DeviceInfo.html":{}}}],["iomechs",{"_index":842,"title":{},"body":{"index.html":{}}}],["ios",{"_index":345,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ipad",{"_index":323,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"index.html":{}}}],["iphone",{"_index":771,"title":{},"body":{"index.html":{}}}],["isdesktop",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"index.html":{}}}],["isdesktop(useragent",{"_index":287,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isdesktopdevice",{"_index":768,"title":{},"body":{"index.html":{}}}],["isdesktopmode",{"_index":242,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isdesktopmodeenabled",{"_index":249,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ismobile",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"index.html":{}}}],["ismobile(useragent",{"_index":294,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isplatformbrowser",{"_index":314,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isplatformbrowser(this.platformid",{"_index":326,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isplatformserver",{"_index":788,"title":{},"body":{"index.html":{}}}],["isplatformserver(platformid",{"_index":793,"title":{},"body":{"index.html":{}}}],["issue",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["istablet",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"index.html":{}}}],["istablet(useragent",{"_index":298,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["it's",{"_index":376,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["item",{"_index":235,"title":{},"body":{"classes/AppPage.html":{},"classes/ReTree.html":{}}}],["jest",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":802,"title":{},"body":{"index.html":{}}}],["js.map",{"_index":803,"title":{},"body":{"index.html":{}}}],["justify",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":365,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{}}}],["keys",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["keys.push",{"_index":487,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keyspipe",{"_index":19,"title":{"pipes/KeysPipe.html":{}},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{},"coverage.html":{}}}],["keywords",{"_index":910,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":884,"title":{},"body":{"license.html":{}}}],["known",{"_index":440,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["koderlabs",{"_index":716,"title":{},"body":{"index.html":{}}}],["landscape",{"_index":321,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["landscape)').matches",{"_index":451,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["later",{"_index":272,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["latest",{"_index":622,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["lazy",{"_index":454,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["leak",{"_index":281,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["leave",{"_index":607,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["liability",{"_index":899,"title":{},"body":{"license.html":{}}}],["liable",{"_index":896,"title":{},"body":{"license.html":{}}}],["library",{"_index":574,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["license",{"_index":638,"title":{"license.html":{}},"body":{"contributing.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["limitation",{"_index":861,"title":{},"body":{"license.html":{}}}],["limited",{"_index":886,"title":{},"body":{"license.html":{}}}],["line",{"_index":356,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["links",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["lint",{"_index":807,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":809,"title":{},"body":{"index.html":{}}}],["literal",{"_index":270,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["live",{"_index":725,"title":{},"body":{"index.html":{}}}],["localhost:4200",{"_index":821,"title":{},"body":{"index.html":{}}}],["lock",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":823,"title":{},"body":{"index.html":{}}}],["logo",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["lot",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":561,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["manually",{"_index":781,"title":{},"body":{"index.html":{}}}],["many",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["map",{"_index":499,"title":{},"body":{"classes/ReTree.html":{}}}],["mapping",{"_index":269,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["margin",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["masquerading",{"_index":460,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["master",{"_index":594,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":361,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["matching",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.max(width",{"_index":414,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["math.min(width",{"_index":416,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["max",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["maxdimension",{"_index":413,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["means",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":888,"title":{},"body":{"license.html":{}}}],["merge",{"_index":864,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["methods",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"index.html":{}}}],["migration",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["mindimension",{"_index":415,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["miscellaneous",{"_index":708,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":839,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mobile",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mobile/tablet",{"_index":375,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mobileindicatorcount",{"_index":408,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mobiles_re",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["mode",{"_index":259,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["modify",{"_index":863,"title":{},"body":{"license.html":{}}}],["modules",{"_index":907,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":395,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["motion/orientation",{"_index":399,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["muhammad",{"_index":846,"title":{},"body":{"license.html":{},"properties.html":{}}}],["multiple",{"_index":406,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["navigateto",{"_index":217,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator",{"_index":351,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["navigator.maxtouchpoints",{"_index":359,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["navigator.platform",{"_index":352,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["navigator.platform.includes('mac",{"_index":358,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["need",{"_index":780,"title":{},"body":{"index.html":{}}}],["needed",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":833,"title":{},"body":{"index.html":{}}}],["new",{"_index":309,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":355,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ng",{"_index":818,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["ngx",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["nofilter",{"_index":484,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["noninfringement",{"_index":892,"title":{},"body":{"license.html":{}}}],["notice",{"_index":877,"title":{},"body":{"license.html":{}}}],["npm",{"_index":637,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"classes/ReTree.html":{},"index.html":{}}}],["object",{"_index":276,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants",{"_index":366,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants.mobiles_re",{"_index":466,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants.tablets_re",{"_index":469,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(deviceconstants",{"_index":433,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.values(indicators).filter(boolean).length",{"_index":409,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["obtaining",{"_index":853,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":260,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["one",{"_index":602,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["onorientationchange",{"_index":398,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ontouchstart",{"_index":388,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["opacity",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["opened",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["optimization",{"_index":364,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["optimized",{"_index":420,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["optional",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"index.html":{}}}],["orientation",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["orientationtype",{"_index":319,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["orientationtype.landscape",{"_index":452,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["orientationtype.portrait",{"_index":453,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["os",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"index.html":{}}}],["os_re",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["os_version",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["os_versions",{"_index":439,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["os_versions_re",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["os_versions_re_map",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["others",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":903,"title":{},"body":{"license.html":{}}}],["out",{"_index":632,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["overview",{"_index":908,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":633,"title":{"dependencies.html":{},"properties.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["padding",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["particular",{"_index":890,"title":{},"body":{"license.html":{}}}],["pass",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["paste",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["path/to/express.tokens",{"_index":787,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":506,"title":{},"body":{"classes/ReTree.html":{}}}],["pattern.test(ua",{"_index":419,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["permission",{"_index":847,"title":{},"body":{"license.html":{}}}],["permit",{"_index":871,"title":{},"body":{"license.html":{}}}],["person",{"_index":852,"title":{},"body":{"license.html":{}}}],["persons",{"_index":872,"title":{},"body":{"license.html":{}}}],["phone",{"_index":773,"title":{},"body":{"index.html":{}}}],["phones",{"_index":418,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["pipe",{"_index":475,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":476,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["pipes/keys.pipe",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["pipetransform",{"_index":481,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["places",{"_index":718,"title":{},"body":{"index.html":{}}}],["planning",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["platform_id",{"_index":313,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["platformid",{"_index":253,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["please",{"_index":590,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pointer",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["portions",{"_index":881,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":320,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["powered",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pr",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["present",{"_index":407,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["preset",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"index.html":{}}}],["processing",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["project",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":841,"title":{},"body":{"index.html":{}}}],["projects/.../device",{"_index":710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../server.ts",{"_index":712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/demo/e2e/src/app.po.ts",{"_index":213,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["projects/demo/e2e/src/app.po.ts:13",{"_index":220,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:17",{"_index":222,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:5",{"_index":223,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:9",{"_index":218,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/server.ts",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/demo/src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["projects/demo/src/app/app.component.ts:14",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:16",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:17",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:18",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:19",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:20",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:23",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:33",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:37",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:41",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:45",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:49",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:54",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.config.server.ts",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["projects/demo/src/app/app.config.ts",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["projects/demo/src/app/pipes/keys.pipe.ts",{"_index":477,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["projects/demo/src/app/pipes/keys.pipe.ts:5",{"_index":480,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["projects/demo/src/express.tokens.ts",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["projects/demo/src/main.server.ts",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["projects/demo/src/server.ts",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["projects/ngx",{"_index":239,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":225,"title":{},"body":{"classes/AppPage.html":{}}}],["prop",{"_index":339,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["props",{"_index":479,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["props.indexof(key",{"_index":489,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["props.length",{"_index":485,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["propstoshow",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["protractor",{"_index":224,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":567,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["provided",{"_index":882,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":324,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["prs",{"_index":592,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":246,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["publish",{"_index":865,"title":{},"body":{"license.html":{}}}],["pull",{"_index":543,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":891,"title":{},"body":{"license.html":{}}}],["questions",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":443,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["read",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["really",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["refinement",{"_index":427,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["regarding",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["regex",{"_index":501,"title":{},"body":{"classes/ReTree.html":{},"index.html":{}}}],["regex.and.every((item",{"_index":518,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.exec(str",{"_index":523,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.not",{"_index":522,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.or.some((item",{"_index":521,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.reduce((res",{"_index":525,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.test(str",{"_index":516,"title":{},"body":{"classes/ReTree.html":{}}}],["regexcache",{"_index":495,"title":{},"body":{"classes/ReTree.html":{}}}],["regexmap",{"_index":341,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["regexmap[key",{"_index":368,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["regexp",{"_index":507,"title":{},"body":{"classes/ReTree.html":{}}}],["regexp(pattern",{"_index":512,"title":{},"body":{"classes/ReTree.html":{}}}],["regexpattern",{"_index":367,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["regular",{"_index":726,"title":{},"body":{"index.html":{}}}],["relative",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["relevant",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":920,"title":{},"body":{"properties.html":{}}}],["reproduced",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":262,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["required",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["res",{"_index":445,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["res[1",{"_index":447,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["reset",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["resetdeviceinfo",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["response",{"_index":655,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["restriction",{"_index":859,"title":{},"body":{"license.html":{}}}],["results",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retaining",{"_index":266,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["retree",{"_index":243,"title":{"classes/ReTree.html":{}},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"coverage.html":{},"index.html":{}}}],["return",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["returns",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["right",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["rights",{"_index":862,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["rotate(45deg",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["rough",{"_index":390,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["run",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":258,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["rxjs",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["savein",{"_index":759,"title":{},"body":{"index.html":{}}}],["screen",{"_index":284,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["section",{"_index":624,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["selenium",{"_index":227,"title":{},"body":{"classes/AppPage.html":{}}}],["sell",{"_index":869,"title":{},"body":{"license.html":{}}}],["send",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":264,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["server",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["serverconfig",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["serverdistfolder",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["servethe",{"_index":819,"title":{},"body":{"index.html":{}}}],["service",{"_index":337,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["setdeviceinfo",{"_index":250,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["setdeviceinfo(ua",{"_index":300,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["sets",{"_index":335,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["shall",{"_index":878,"title":{},"body":{"license.html":{}}}],["share",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["shy",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["signatures",{"_index":280,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["size",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":619,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":855,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["special",{"_index":343,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["specific",{"_index":401,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ssr",{"_index":777,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["standalone:true",{"_index":482,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["started",{"_index":528,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["statements",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":609,"title":{},"body":{"contributing.html":{}}}],["stop",{"_index":465,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["str",{"_index":503,"title":{},"body":{"classes/ReTree.html":{}}}],["string",{"_index":255,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"index.html":{}}}],["strings",{"_index":265,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["subject",{"_index":874,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":867,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":880,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":286,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["summary",{"_index":620,"title":{},"body":{"contributing.html":{}}}],["super(platformid",{"_index":792,"title":{},"body":{"index.html":{}}}],["super.setdeviceinfo((request.headers['user",{"_index":794,"title":{},"body":{"index.html":{}}}],["support",{"_index":385,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["sure",{"_index":562,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["table",{"_index":234,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["tablets_re",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["test",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"classes/ReTree.html":{}}}],["test(str",{"_index":508,"title":{},"body":{"classes/ReTree.html":{}}}],["tests",{"_index":546,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["testto",{"_index":810,"title":{},"body":{"index.html":{}}}],["text",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["text')).gettext",{"_index":232,"title":{},"body":{"classes/AppPage.html":{}}}],["thank",{"_index":627,"title":{},"body":{"contributing.html":{}}}],["there's",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["thing",{"_index":615,"title":{},"body":{"contributing.html":{}}}],["this.applydevice",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser",{"_index":423,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.browser_version",{"_index":441,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.detectdesktopmode(ua",{"_index":462,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.detectfrommapping(ua",{"_index":422,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.device",{"_index":424,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.deviceinfo",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.getdeviceinfo",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.isdesktop",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.ismobile",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.istablet",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.setdeviceinfo(useragent",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["this.devicetype",{"_index":377,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.epicfunction",{"_index":765,"title":{},"body":{"index.html":{}}}],["this.exec(str",{"_index":526,"title":{},"body":{"classes/ReTree.html":{}}}],["this.getdeviceinfo",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getregex(regex",{"_index":514,"title":{},"body":{"classes/ReTree.html":{}}}],["this.hasmobilebrowsersignatures(ua",{"_index":394,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.hasmobilescreendimensions",{"_index":393,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.isdesktop(this.useragent",{"_index":458,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.isdesktopmode",{"_index":461,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.ismobile(this.useragent",{"_index":457,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.ismobile(useragent",{"_index":472,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.istablet",{"_index":456,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.istablet(useragent",{"_index":464,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.orientation",{"_index":449,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.os",{"_index":421,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.os_version",{"_index":438,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.regexcache.get(pattern",{"_index":513,"title":{},"body":{"classes/ReTree.html":{}}}],["this.regexcache.has(pattern",{"_index":510,"title":{},"body":{"classes/ReTree.html":{}}}],["this.regexcache.set(pattern",{"_index":511,"title":{},"body":{"classes/ReTree.html":{}}}],["this.retree.exec(ua",{"_index":446,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(this.useragent",{"_index":349,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(ua",{"_index":369,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(useragent",{"_index":467,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.setdeviceinfo(this.useragent",{"_index":330,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.test(str",{"_index":519,"title":{},"body":{"classes/ReTree.html":{}}}],["this.ua",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["this.useragent",{"_index":290,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["threads",{"_index":601,"title":{},"body":{"contributing.html":{}}}],["through",{"_index":282,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"contributing.html":{}}}],["time",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["tips",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["took",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["top",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":902,"title":{},"body":{"license.html":{}}}],["touch",{"_index":384,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["track",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["transform(value",{"_index":478,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["tried",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{}}}],["try",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["ts",{"_index":808,"title":{},"body":{"index.html":{}}}],["tscto",{"_index":806,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"coverage.html":{}}}],["typeof",{"_index":327,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["typescript",{"_index":830,"title":{},"body":{"index.html":{}}}],["typical",{"_index":417,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ua",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["undefined",{"_index":329,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["unit",{"_index":596,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["universaldevicedetectorservice",{"_index":789,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["up",{"_index":820,"title":{},"body":{"index.html":{}}}],["update",{"_index":617,"title":{},"body":{"contributing.html":{}}}],["updates",{"_index":825,"title":{},"body":{"index.html":{}}}],["usage",{"_index":274,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["use",{"_index":722,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":796,"title":{},"body":{"index.html":{}}}],["used",{"_index":829,"title":{},"body":{"index.html":{}}}],["useful",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["user",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["useragent",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["useragentinputval",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{},"index.html":{}}}],["v1.5.2",{"_index":723,"title":{},"body":{"index.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"miscellaneous/enumerations.html":{}}}],["value.hasownproperty(key",{"_index":486,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["value[key",{"_index":488,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["var",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["version",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{},"index.html":{},"properties.html":{}}}],["version.full",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/functions.html":{}}}],["want",{"_index":556,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["warranties",{"_index":887,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":883,"title":{},"body":{"license.html":{}}}],["way",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["ways",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["wdpromise",{"_index":226,"title":{},"body":{"classes/AppPage.html":{}}}],["wdpromise.promise",{"_index":219,"title":{},"body":{"classes/AppPage.html":{}}}],["webdriver",{"_index":228,"title":{},"body":{"classes/AppPage.html":{}}}],["websites",{"_index":263,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["whether",{"_index":291,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"license.html":{}}}],["width",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window",{"_index":328,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.matchmedia",{"_index":448,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.matchmedia('(orientation",{"_index":450,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.navigator.useragent",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.screen",{"_index":411,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["windows",{"_index":772,"title":{},"body":{"index.html":{}}}],["without",{"_index":858,"title":{},"body":{"license.html":{}}}],["work",{"_index":828,"title":{},"body":{"index.html":{}}}],["worked",{"_index":720,"title":{},"body":{"index.html":{}}}],["working",{"_index":604,"title":{},"body":{"contributing.html":{}}}],["wrapper",{"_index":831,"title":{},"body":{"index.html":{}}}],["write",{"_index":545,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["you'll",{"_index":779,"title":{},"body":{"index.html":{}}}],["you're",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["zone.js",{"_index":706,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/demo/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                            KeysPipe\n                \n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceInfo\n                            \n                            \n                                    Private\n                                deviceService\n                            \n                            \n                                propsToShow\n                            \n                            \n                                ua\n                            \n                            \n                                userAgentInputVal\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyDevice\n                            \n                            \n                                getDeviceInfo\n                            \n                            \n                                resetDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isMobile\n                                \n                                \n                                    isTablet\n                                \n                                \n                                    isDesktop\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/app.component.ts:23\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyDevice\n                        \n                    \n                \n            \n            \n                \napplyDevice(userAgent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userAgent\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.ua\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceInfo\n                        \n                    \n                \n            \n            \n                \ngetDeviceInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetDeviceInfo\n                        \n                    \n                \n            \n            \n                \nresetDeviceInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deviceService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DeviceDetectorService)\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propsToShow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['userAgent', 'os', 'browser', 'device', 'os_version', 'browser_version', 'deviceType', 'orientation']\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userAgentInputVal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : VERSION.full\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isMobile\n                    \n                \n\n                \n                    \n                        getisMobile()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTablet\n                    \n                \n\n                \n                    \n                        getisTablet()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:41\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDesktop\n                    \n                \n\n                \n                    \n                        getisDesktop()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:45\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, VERSION, inject } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { NgClass } from '@angular/common';\nimport { KeysPipe } from './pipes/keys.pipe';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n    imports: [NgClass, KeysPipe],\n    standalone: true\n})\nexport class AppComponent {\n  private deviceService = inject(DeviceDetectorService);\n\n  propsToShow = ['userAgent', 'os', 'browser', 'device', 'os_version', 'browser_version', 'deviceType', 'orientation'];\n  deviceInfo = null;\n  version = VERSION.full;\n  userAgentInputVal = null;\n  ua;\n\n  /** Inserted by Angular inject() migration for backwards compatibility */\n  constructor(...args: unknown[]);\n  constructor() {\n    try {\n      this.ua = window.navigator.userAgent;\n    } catch {\n      console.log('UA not available');\n    }\n    this.applyDevice();\n  }\n\n  getDeviceInfo(): void {\n    this.deviceInfo = this.deviceService.getDeviceInfo();\n  }\n\n  get isMobile(): boolean {\n    return this.deviceService.isMobile();\n  }\n\n  get isTablet(): boolean {\n    return this.deviceService.isTablet();\n  }\n\n  get isDesktop(): boolean {\n    return this.deviceService.isDesktop();\n  }\n\n  applyDevice(userAgent = this.ua): void {\n    this.deviceService.setDeviceInfo(userAgent);\n    this.getDeviceInfo();\n  }\n\n  resetDeviceInfo(): void {\n    this.applyDevice();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        ngx-device-detector\n      \n\n      \n        An Angular 5+ powered AOT compatible device detector that helps to identify browser, os and other useful\n        information regarding the device using the app. The processing is based on user-agent.\n      \n\n      \n        \n        \n        \n        \n      \n      \n    \n    Demo is at Angular version = {{ version }}\n    \n      Open this page from different devices to see the appropriate details\n      Device Information\n    \n    \n      \n        \n          Test User Agent\n          \n          Paste the user agent (window.navigator.userAgent) here\n        \n      \n      \n        \n          Apply test user agent\n        \n        Reset device info\n      \n    \n    \n      \n        \n        @if (isMobile) {\n          Mobile\n        }\n        @if (isTablet) {\n          Tablet\n        }\n        @if (isDesktop) {\n          Desktop\n        }\n      \n      \n        \n          Property\n          Value\n        \n        @for (info of deviceInfo | keys : propsToShow; track info) {\n          \n            {{ info.key }}\n            {{ info.value }}\n          \n        }\n        \n          isDesktop()\n          {{ isDesktop }}\n        \n        \n          isMobile()\n          {{ isMobile }}\n        \n        \n          isTablet()\n          {{ isTablet }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  position: relative;\n  display: block;\n}\n#demoApp {\n  max-width: 600px;\n  padding-top: 40px;\n  .demo-container {\n    .github-logo {\n      cursor: pointer;\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      img {\n        width: 40px;\n        transform: rotate(45deg);\n      }\n      &:hover {\n        img {\n          opacity: 0.6;\n        }\n      }\n    }\n    .badges {\n      a {\n        margin-left: 4px;\n        margin-right: 4px;\n      }\n    }\n  }\n\n  .device-icon {\n    text-align: center;\n    padding: 20px;\n\n    .fa {\n      font-size: 100px;\n    }\n  }\n\n  .user-agent {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    &__input {\n      flex: 1;\n      input {\n        width: 100%;\n      }\n    }\n    &__buttons {\n      display: flex;\n      justify-content: flex-end;\n      > button {\n        &:first-child {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      ngx-device-detector                    An Angular 5+ powered AOT compatible device detector that helps to identify browser, os and other useful        information regarding the device using the app. The processing is based on user-agent.                                                                Demo is at Angular version = {{ version }}          Open this page from different devices to see the appropriate details      Device Information                                Test User Agent                    Paste the user agent (window.navigator.userAgent) here                                      Apply test user agent                Reset device info                                    @if (isMobile) {          Mobile        }        @if (isTablet) {          Tablet        }        @if (isDesktop) {          Desktop        }                              Property          Value                @for (info of deviceInfo | keys : propsToShow; track info) {                      {{ info.key }}            {{ info.value }}                  }                  isDesktop()          {{ isDesktop }}                          isMobile()          {{ isMobile }}                          isTablet()          {{ isTablet }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/demo/e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDemoHeadingText\n                            \n                            \n                                getDeviceInfoElements\n                            \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDemoHeadingText\n                        \n                    \n                \n            \n            \n                \ngetDemoHeadingText()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/e2e/src/app.po.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     wdpromise.Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceInfoElements\n                        \n                    \n                \n            \n            \n                \ngetDeviceInfoElements()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/e2e/src/app.po.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ElementArrayFinder\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParagraphText\n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/e2e/src/app.po.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     wdpromise.Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/e2e/src/app.po.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     wdpromise.Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, ElementArrayFinder } from 'protractor';\nimport { promise as wdpromise } from 'selenium-webdriver';\n\nexport class AppPage {\n  navigateTo(): wdpromise.Promise {\n    return browser.get('/');\n  }\n\n  getDemoHeadingText(): wdpromise.Promise {\n    return element(by.css('app-root .demo-heading-text')).getText();\n  }\n\n  getDeviceInfoElements(): ElementArrayFinder {\n    return element.all(by.css('app-root .information-table .info-item'));\n  }\n\n  getParagraphText(): wdpromise.Promise {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceDetectorService.html":{"url":"injectables/DeviceDetectorService.html","title":"injectable - DeviceDetectorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceDetectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/device-detector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browser\n                            \n                            \n                                browser_version\n                            \n                            \n                                device\n                            \n                            \n                                deviceType\n                            \n                            \n                                isDesktopMode\n                            \n                            \n                                orientation\n                            \n                            \n                                os\n                            \n                            \n                                os_version\n                            \n                            \n                                reTree\n                            \n                            \n                                ua\n                            \n                            \n                                userAgent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                detectDesktopMode\n                            \n                            \n                                    Private\n                                detectFromMapping\n                            \n                            \n                                    Public\n                                getDeviceInfo\n                            \n                            \n                                    Private\n                                hasMobileBrowserSignatures\n                            \n                            \n                                    Private\n                                hasMobileScreenDimensions\n                            \n                            \n                                    Public\n                                isDesktop\n                            \n                            \n                                    Public\n                                isDesktopModeEnabled\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Public\n                                isTablet\n                            \n                            \n                                setDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        detectDesktopMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    detectDesktopMode(ua: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Detects if a mobile device is running in desktop mode\nDesktop mode occurs when mobile browsers request desktop websites\nby sending desktop user agent strings while retaining mobile characteristics\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        detectFromMapping\n                        \n                    \n                \n            \n            \n                \n                        \n                    detectFromMapping(ua: string, mapping: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:61\n                        \n                    \n\n\n            \n                \n                        This value is later accessible for usage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mapping\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getDeviceInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:239\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         DeviceInfo\n\n                        \n                            \n                                the device information object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasMobileBrowserSignatures\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasMobileBrowserSignatures(ua: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Checks for mobile browser signatures that might leak through in desktop mode\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ua\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasMobileScreenDimensions\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasMobileScreenDimensions()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Checks if screen dimensions suggest mobile device\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDesktop\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDesktop(userAgent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:309\n                        \n                    \n\n\n            \n                \n                        if the current device is a desktop device.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userAgent\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.userAgent\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                whether the current device is a desktop device\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDesktopModeEnabled\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDesktopModeEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:322\n                        \n                    \n\n\n            \n                \n                        Desktop mode occurs when mobile browsers request desktop websites by sending\ndesktop user agent strings while retaining mobile hardware characteristics.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                whether the current device is in desktop mode\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMobile\n                        \n                    \n                \n            \n            \n                \n                        \n                    isMobile(userAgent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:260\n                        \n                    \n\n\n            \n                \n                        if the current device is a mobile and also check current device is tablet so it will return false.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userAgent\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.userAgent\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                whether the current device is a mobile\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isTablet\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTablet(userAgent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:280\n                        \n                    \n\n\n            \n                \n                        if the current device is a tablet.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userAgent\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.userAgent\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                whether the current device is a tablet\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDeviceInfo\n                        \n                    \n                \n            \n            \n                \nsetDeviceInfo(ua)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                ua\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.userAgent\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browser_version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktopMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orientation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        os_version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reTree\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReTree()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { PLATFORM_ID, Inject, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Constants from './device-detector.constants';\nimport { ReTree } from './retree';\n\nexport interface DeviceInfo {\n  userAgent: string;\n  os: string;\n  browser: string;\n  device: string;\n  os_version: string;\n  browser_version: string;\n  deviceType: string;\n  orientation: string;\n  isDesktopMode: boolean;\n}\nexport enum DeviceType {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop',\n  Unknown = 'unknown',\n}\nexport enum OrientationType {\n  Portrait = 'portrait',\n  Landscape = 'landscape',\n}\n\nconst iPad = 'iPad';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceDetectorService {\n  ua = '';\n  userAgent = '';\n  os = '';\n  browser = '';\n  device = '';\n  os_version = '';\n  browser_version = '';\n  reTree = new ReTree();\n  deviceType = '';\n  orientation = '';\n  isDesktopMode = false;\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {\n    if (isPlatformBrowser(this.platformId) && typeof window !== 'undefined') {\n      this.userAgent = window.navigator.userAgent;\n    }\n    this.setDeviceInfo(this.userAgent);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Sets the initial value of the device when the service is initiated.\n   * This value is later accessible for usage\n   */\n  private detectFromMapping(ua: string, mapping: { const: string; prop: string }): string {\n    const constants = Constants[mapping.const] as any;\n    const regexMap = Constants[`${mapping.const}_RE`] as any;\n\n    // Special case for iOS 13 Tablet hack\n    if (\n      constants.device &&\n      constants.device === 'device' &&\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' &&\n          navigator.platform &&\n          // eslint-disable-next-line deprecation/deprecation\n          navigator.platform.includes('Mac') &&\n          navigator.maxTouchPoints > 1))\n    ) {\n      return iPad;\n    }\n\n    // Find first match - early exit optimization\n    for (const key of Object.keys(constants)) {\n      const regexPattern = regexMap[key];\n      if (regexPattern && this.reTree.test(ua, regexPattern)) {\n        return constants[key];\n      }\n    }\n\n    return constants.UNKNOWN || Constants.GENERAL.UKNOWN;\n  }\n\n  /**\n   * Detects if a mobile device is running in desktop mode\n   * Desktop mode occurs when mobile browsers request desktop websites\n   * by sending desktop user agent strings while retaining mobile characteristics\n   */\n  private detectDesktopMode(ua: string): boolean {\n    if (!isPlatformBrowser(this.platformId) || typeof window === 'undefined') {\n      return false;\n    }\n\n    // If user agent already indicates mobile/tablet, it's not desktop mode\n    if (this.deviceType === DeviceType.Mobile || this.deviceType === DeviceType.Tablet) {\n      return false;\n    }\n\n    // If it's genuinely desktop, it's not desktop mode\n    if (this.deviceType !== DeviceType.Desktop) {\n      return false;\n    }\n\n    // Desktop mode detection indicators\n    const indicators = {\n      // Touch support despite desktop UA\n      hasTouch: 'ontouchstart' in window || (navigator.maxTouchPoints && navigator.maxTouchPoints > 0),\n\n      // Mobile-like screen dimensions (rough heuristics)\n      hasMobileScreenSize: this.hasMobileScreenDimensions(),\n\n      // Mobile browser signatures in desktop mode\n      hasMobileBrowserSignatures: this.hasMobileBrowserSignatures(ua),\n\n      // Orientation support (more common on mobile)\n      hasOrientationSupport: 'orientation' in window || 'onorientationchange' in window,\n\n      // Device motion/orientation APIs (mobile-specific)\n      hasDeviceMotion: 'DeviceMotionEvent' in window || 'DeviceOrientationEvent' in window,\n    };\n\n    // If device has touch + desktop UA, it's likely desktop mode\n    if (indicators.hasTouch) {\n      return true;\n    }\n\n    // If multiple mobile indicators are present with desktop UA, likely desktop mode\n    const mobileIndicatorCount = Object.values(indicators).filter(Boolean).length;\n    return mobileIndicatorCount >= 2;\n  }\n\n  /**\n   * Checks if screen dimensions suggest mobile device\n   */\n  private hasMobileScreenDimensions(): boolean {\n    if (typeof window === 'undefined' || !window.screen) {\n      return false;\n    }\n\n    const { width, height } = window.screen;\n    const maxDimension = Math.max(width, height);\n    const minDimension = Math.min(width, height);\n\n    // Typical mobile screen characteristics\n    // Most phones: width  pattern.test(ua));\n  }\n\n  setDeviceInfo(ua = this.userAgent): void {\n    if (ua !== this.userAgent) {\n      this.userAgent = ua;\n    }\n\n    // Optimized detection with early exit\n    this.os = this.detectFromMapping(ua, { const: 'OS', prop: 'os' });\n    this.browser = this.detectFromMapping(ua, { const: 'BROWSERS', prop: 'browser' });\n    this.device = this.detectFromMapping(ua, { const: 'DEVICES', prop: 'device' });\n\n    // Handle Android device refinement\n    if (this.device === Constants.DEVICES.ANDROID) {\n      const deviceConstants = Constants.DEVICES as any;\n      const deviceRegexMap = Constants.DEVICES_RE as any;\n\n      for (const key of Object.keys(deviceConstants)) {\n        const regexPattern = deviceRegexMap[key];\n        if (regexPattern && this.reTree.test(ua, regexPattern) && deviceConstants[key] !== Constants.DEVICES.ANDROID) {\n          this.device = deviceConstants[key];\n          break; // Early exit when found\n        }\n      }\n    }\n\n    this.os_version = this.detectFromMapping(ua, { const: 'OS_VERSIONS', prop: 'os_version' });\n\n    // Browser version detection - only if browser is known\n    this.browser_version = '0';\n    if (this.browser !== Constants.BROWSERS.UNKNOWN) {\n      const re = Constants.BROWSER_VERSIONS_RE[this.browser];\n      if (re) {\n        const res = this.reTree.exec(ua, re);\n        if (res) {\n          this.browser_version = res[1];\n        }\n      }\n    }\n\n    // Orientation detection\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.orientation = window.matchMedia('(orientation: landscape)').matches\n        ? OrientationType.Landscape\n        : OrientationType.Portrait;\n    } else {\n      this.orientation = Constants.GENERAL.UKNOWN;\n    }\n\n    // Device type detection - lazy evaluation\n    this.deviceType = this.isTablet()\n      ? DeviceType.Tablet\n      : this.isMobile(this.userAgent)\n        ? DeviceType.Mobile\n        : this.isDesktop(this.userAgent)\n          ? DeviceType.Desktop\n          : DeviceType.Unknown;\n\n    // Desktop mode detection - check if mobile device is masquerading as desktop\n    this.isDesktopMode = this.detectDesktopMode(ua);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Returns the device information\n   * @returns the device information object.\n   */\n  public getDeviceInfo(): DeviceInfo {\n    const deviceInfo: DeviceInfo = {\n      userAgent: this.userAgent,\n      os: this.os,\n      browser: this.browser,\n      device: this.device,\n      os_version: this.os_version,\n      browser_version: this.browser_version,\n      deviceType: this.deviceType,\n      orientation: this.orientation,\n      isDesktopMode: this.isDesktopMode,\n    };\n    return deviceInfo;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the mobile devices to check\n   * if the current device is a mobile and also check current device is tablet so it will return false.\n   * @returns whether the current device is a mobile\n   */\n  public isMobile(userAgent = this.userAgent): boolean {\n    if (this.isTablet(userAgent)) {\n      return false;\n    }\n\n    // Early exit optimization - stop at first match\n    for (const key of Object.keys(Constants.MOBILES_RE)) {\n      if (this.reTree.test(userAgent, Constants.MOBILES_RE[key])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the tablet devices to check\n   * if the current device is a tablet.\n   * @returns whether the current device is a tablet\n   */\n  public isTablet(userAgent = this.userAgent): boolean {\n    // iOS 13 Tablet special case\n    if (\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' &&\n          navigator.platform &&\n          // eslint-disable-next-line deprecation/deprecation\n          navigator.platform.includes('Mac') &&\n          navigator.maxTouchPoints > 1))\n    ) {\n      return true;\n    }\n\n    // Early exit optimization - stop at first match\n    for (const key of Object.keys(Constants.TABLETS_RE)) {\n      if (this.reTree.test(userAgent, Constants.TABLETS_RE[key])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the desktop devices to check\n   * if the current device is a desktop device.\n   * @returns whether the current device is a desktop device\n   */\n  public isDesktop(userAgent = this.userAgent): boolean {\n    if (this.device === Constants.DEVICES.UNKNOWN && (this.isMobile(userAgent) || this.isTablet(userAgent))) {\n      return false;\n    }\n    return Constants.DESKTOP_DEVICES.includes(this.device);\n  }\n\n  /**\n   * @desc Checks if the current device is a mobile device running in desktop mode.\n   * Desktop mode occurs when mobile browsers request desktop websites by sending\n   * desktop user agent strings while retaining mobile hardware characteristics.\n   * @returns whether the current device is in desktop mode\n   */\n  public isDesktopModeEnabled(): boolean {\n    return this.isDesktopMode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceInfo.html":{"url":"interfaces/DeviceInfo.html","title":"interface - DeviceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeviceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/device-detector.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            browser\n                                        \n                                \n                                \n                                        \n                                            browser_version\n                                        \n                                \n                                \n                                        \n                                            device\n                                        \n                                \n                                \n                                        \n                                            deviceType\n                                        \n                                \n                                \n                                        \n                                            isDesktopMode\n                                        \n                                \n                                \n                                        \n                                            orientation\n                                        \n                                \n                                \n                                        \n                                            os\n                                        \n                                \n                                \n                                        \n                                            os_version\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        browser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        browser_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        browser_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        device\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        device:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDesktopMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDesktopMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        os\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        os:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        os_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        os_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PLATFORM_ID, Inject, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Constants from './device-detector.constants';\nimport { ReTree } from './retree';\n\nexport interface DeviceInfo {\n  userAgent: string;\n  os: string;\n  browser: string;\n  device: string;\n  os_version: string;\n  browser_version: string;\n  deviceType: string;\n  orientation: string;\n  isDesktopMode: boolean;\n}\nexport enum DeviceType {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop',\n  Unknown = 'unknown',\n}\nexport enum OrientationType {\n  Portrait = 'portrait',\n  Landscape = 'landscape',\n}\n\nconst iPad = 'iPad';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceDetectorService {\n  ua = '';\n  userAgent = '';\n  os = '';\n  browser = '';\n  device = '';\n  os_version = '';\n  browser_version = '';\n  reTree = new ReTree();\n  deviceType = '';\n  orientation = '';\n  isDesktopMode = false;\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {\n    if (isPlatformBrowser(this.platformId) && typeof window !== 'undefined') {\n      this.userAgent = window.navigator.userAgent;\n    }\n    this.setDeviceInfo(this.userAgent);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Sets the initial value of the device when the service is initiated.\n   * This value is later accessible for usage\n   */\n  private detectFromMapping(ua: string, mapping: { const: string; prop: string }): string {\n    const constants = Constants[mapping.const] as any;\n    const regexMap = Constants[`${mapping.const}_RE`] as any;\n\n    // Special case for iOS 13 Tablet hack\n    if (\n      constants.device &&\n      constants.device === 'device' &&\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' &&\n          navigator.platform &&\n          // eslint-disable-next-line deprecation/deprecation\n          navigator.platform.includes('Mac') &&\n          navigator.maxTouchPoints > 1))\n    ) {\n      return iPad;\n    }\n\n    // Find first match - early exit optimization\n    for (const key of Object.keys(constants)) {\n      const regexPattern = regexMap[key];\n      if (regexPattern && this.reTree.test(ua, regexPattern)) {\n        return constants[key];\n      }\n    }\n\n    return constants.UNKNOWN || Constants.GENERAL.UKNOWN;\n  }\n\n  /**\n   * Detects if a mobile device is running in desktop mode\n   * Desktop mode occurs when mobile browsers request desktop websites\n   * by sending desktop user agent strings while retaining mobile characteristics\n   */\n  private detectDesktopMode(ua: string): boolean {\n    if (!isPlatformBrowser(this.platformId) || typeof window === 'undefined') {\n      return false;\n    }\n\n    // If user agent already indicates mobile/tablet, it's not desktop mode\n    if (this.deviceType === DeviceType.Mobile || this.deviceType === DeviceType.Tablet) {\n      return false;\n    }\n\n    // If it's genuinely desktop, it's not desktop mode\n    if (this.deviceType !== DeviceType.Desktop) {\n      return false;\n    }\n\n    // Desktop mode detection indicators\n    const indicators = {\n      // Touch support despite desktop UA\n      hasTouch: 'ontouchstart' in window || (navigator.maxTouchPoints && navigator.maxTouchPoints > 0),\n\n      // Mobile-like screen dimensions (rough heuristics)\n      hasMobileScreenSize: this.hasMobileScreenDimensions(),\n\n      // Mobile browser signatures in desktop mode\n      hasMobileBrowserSignatures: this.hasMobileBrowserSignatures(ua),\n\n      // Orientation support (more common on mobile)\n      hasOrientationSupport: 'orientation' in window || 'onorientationchange' in window,\n\n      // Device motion/orientation APIs (mobile-specific)\n      hasDeviceMotion: 'DeviceMotionEvent' in window || 'DeviceOrientationEvent' in window,\n    };\n\n    // If device has touch + desktop UA, it's likely desktop mode\n    if (indicators.hasTouch) {\n      return true;\n    }\n\n    // If multiple mobile indicators are present with desktop UA, likely desktop mode\n    const mobileIndicatorCount = Object.values(indicators).filter(Boolean).length;\n    return mobileIndicatorCount >= 2;\n  }\n\n  /**\n   * Checks if screen dimensions suggest mobile device\n   */\n  private hasMobileScreenDimensions(): boolean {\n    if (typeof window === 'undefined' || !window.screen) {\n      return false;\n    }\n\n    const { width, height } = window.screen;\n    const maxDimension = Math.max(width, height);\n    const minDimension = Math.min(width, height);\n\n    // Typical mobile screen characteristics\n    // Most phones: width  pattern.test(ua));\n  }\n\n  setDeviceInfo(ua = this.userAgent): void {\n    if (ua !== this.userAgent) {\n      this.userAgent = ua;\n    }\n\n    // Optimized detection with early exit\n    this.os = this.detectFromMapping(ua, { const: 'OS', prop: 'os' });\n    this.browser = this.detectFromMapping(ua, { const: 'BROWSERS', prop: 'browser' });\n    this.device = this.detectFromMapping(ua, { const: 'DEVICES', prop: 'device' });\n\n    // Handle Android device refinement\n    if (this.device === Constants.DEVICES.ANDROID) {\n      const deviceConstants = Constants.DEVICES as any;\n      const deviceRegexMap = Constants.DEVICES_RE as any;\n\n      for (const key of Object.keys(deviceConstants)) {\n        const regexPattern = deviceRegexMap[key];\n        if (regexPattern && this.reTree.test(ua, regexPattern) && deviceConstants[key] !== Constants.DEVICES.ANDROID) {\n          this.device = deviceConstants[key];\n          break; // Early exit when found\n        }\n      }\n    }\n\n    this.os_version = this.detectFromMapping(ua, { const: 'OS_VERSIONS', prop: 'os_version' });\n\n    // Browser version detection - only if browser is known\n    this.browser_version = '0';\n    if (this.browser !== Constants.BROWSERS.UNKNOWN) {\n      const re = Constants.BROWSER_VERSIONS_RE[this.browser];\n      if (re) {\n        const res = this.reTree.exec(ua, re);\n        if (res) {\n          this.browser_version = res[1];\n        }\n      }\n    }\n\n    // Orientation detection\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.orientation = window.matchMedia('(orientation: landscape)').matches\n        ? OrientationType.Landscape\n        : OrientationType.Portrait;\n    } else {\n      this.orientation = Constants.GENERAL.UKNOWN;\n    }\n\n    // Device type detection - lazy evaluation\n    this.deviceType = this.isTablet()\n      ? DeviceType.Tablet\n      : this.isMobile(this.userAgent)\n        ? DeviceType.Mobile\n        : this.isDesktop(this.userAgent)\n          ? DeviceType.Desktop\n          : DeviceType.Unknown;\n\n    // Desktop mode detection - check if mobile device is masquerading as desktop\n    this.isDesktopMode = this.detectDesktopMode(ua);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Returns the device information\n   * @returns the device information object.\n   */\n  public getDeviceInfo(): DeviceInfo {\n    const deviceInfo: DeviceInfo = {\n      userAgent: this.userAgent,\n      os: this.os,\n      browser: this.browser,\n      device: this.device,\n      os_version: this.os_version,\n      browser_version: this.browser_version,\n      deviceType: this.deviceType,\n      orientation: this.orientation,\n      isDesktopMode: this.isDesktopMode,\n    };\n    return deviceInfo;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the mobile devices to check\n   * if the current device is a mobile and also check current device is tablet so it will return false.\n   * @returns whether the current device is a mobile\n   */\n  public isMobile(userAgent = this.userAgent): boolean {\n    if (this.isTablet(userAgent)) {\n      return false;\n    }\n\n    // Early exit optimization - stop at first match\n    for (const key of Object.keys(Constants.MOBILES_RE)) {\n      if (this.reTree.test(userAgent, Constants.MOBILES_RE[key])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the tablet devices to check\n   * if the current device is a tablet.\n   * @returns whether the current device is a tablet\n   */\n  public isTablet(userAgent = this.userAgent): boolean {\n    // iOS 13 Tablet special case\n    if (\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' &&\n          navigator.platform &&\n          // eslint-disable-next-line deprecation/deprecation\n          navigator.platform.includes('Mac') &&\n          navigator.maxTouchPoints > 1))\n    ) {\n      return true;\n    }\n\n    // Early exit optimization - stop at first match\n    for (const key of Object.keys(Constants.TABLETS_RE)) {\n      if (this.reTree.test(userAgent, Constants.TABLETS_RE[key])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the desktop devices to check\n   * if the current device is a desktop device.\n   * @returns whether the current device is a desktop device\n   */\n  public isDesktop(userAgent = this.userAgent): boolean {\n    if (this.device === Constants.DEVICES.UNKNOWN && (this.isMobile(userAgent) || this.isTablet(userAgent))) {\n      return false;\n    }\n    return Constants.DESKTOP_DEVICES.includes(this.device);\n  }\n\n  /**\n   * @desc Checks if the current device is a mobile device running in desktop mode.\n   * Desktop mode occurs when mobile browsers request desktop websites by sending\n   * desktop user agent strings while retaining mobile hardware characteristics.\n   * @returns whether the current device is in desktop mode\n   */\n  public isDesktopModeEnabled(): boolean {\n    return this.isDesktopMode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/demo/src/app/pipes/keys.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, props: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/pipes/keys.pipe.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                props\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'keys', standalone:true })\nexport class KeysPipe implements PipeTransform {\n  transform(value, props: string[] = []): any {\n    const keys = [];\n    const noFilter = props.length === 0;\n    for (const key in value) {\n      if (noFilter) {\n        if (value.hasOwnProperty(key)) {\n          keys.push({ key, value: value[key] });\n        }\n      } else {\n        if (props.indexOf(key) !== -1) {\n          keys.push({ key, value: value[key] });\n        }\n      }\n    }\n    return keys;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReTree.html":{"url":"classes/ReTree.html","title":"class - ReTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/retree.ts\n        \n\n\n            \n                Description\n            \n            \n                Created by ahsanayaz on 08/11/2016.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exec\n                            \n                            \n                                    Private\n                                getRegex\n                            \n                            \n                                    Public\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-device-detector/src/lib/retree.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-device-detector/src/lib/retree.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(str: string, regex: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/retree.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                regex\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getRegex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegex(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/retree.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     RegExp\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test(str: string, regex: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-device-detector/src/lib/retree.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                regex\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ReTree {\n  private regexCache = new Map();\n\n  constructor() {}\n\n  private getRegex(pattern: string): RegExp {\n    if (!this.regexCache.has(pattern)) {\n      this.regexCache.set(pattern, new RegExp(pattern));\n    }\n    return this.regexCache.get(pattern)!;\n  }\n\n  public test(str: string, regex: any): any {\n    if (typeof regex === 'string') {\n      regex = this.getRegex(regex);\n    }\n\n    if (regex instanceof RegExp) {\n      return regex.test(str);\n    } else if (regex && Array.isArray(regex.and)) {\n      return regex.and.every((item: any) => {\n        return this.test(str, item);\n      });\n    } else if (regex && Array.isArray(regex.or)) {\n      return regex.or.some((item: any) => {\n        return this.test(str, item);\n      });\n    } else if (regex && regex.not) {\n      return !this.test(str, regex.not);\n    } else {\n      return false;\n    }\n  }\n\n  public exec(str: string, regex: any): any {\n    if (typeof regex === 'string') {\n      regex = this.getRegex(regex);\n    }\n\n    if (regex instanceof RegExp) {\n      return regex.exec(str);\n    } else if (regex && Array.isArray(regex)) {\n      return regex.reduce((res: any, item: any) => {\n        return !!res ? res : this.exec(str, item);\n      }, null);\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nHow to Contribute\nThere are many ways you can Contribute to this project!\n\nCreate issues or help close them\nFork, Enhance, Fix Bugs, and send in Pull Requests\nHelp write Tests or improve Examples / Documentation\nShare repo with others.\n\nIssues\nFound a bug, have some feedback or really want some feature? Lock in an Issue. Here are some tips:\n\nMake sure the bug you're reporting really is a bug and you have read the docs/readme.\nProvide as many details as you can about the bug. How can it be reproduced? What have you tried so far?\nFor feature requests, really explain why your feature is important and how it improves the library and helps the developers using it.\nGo through existing issues. Make sure that it hasn't already been opened.\nIf planning on helping close an issue, don't be shy. Ask questions and get more information before sending your PR.\n\nPull Requests\nWant to fix a bug, implement a feature or help with the tests / docs? Please read this first:\n\nMake sure there's an open issue for what you're sending in your Pull Request. If not, open it.\nSend in your PRs agains the master branch.\nWrite unit tests / docs for any new feature you implement.\nMake sure your PRs pass all tests and CI.\nBe active in your relevant issue and PR threads.\nMake sure no one else is assigned or working on the issue. It's a good idea to leave a comment stating that you're going to implement it before sending in your PR. \nThis way no two devs are working on the same thing.\nIf required, update the CHANGELOG.md file with a small summary of your changes in the latest version (add a new section if needed)\n\nFinally, Thank you!\nIt means a lot that you took time out to improve this package and contribute back to the community. 🎉\nRelevant Links\nProject Page\nAuthor\nNPM Package\nLicense\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/demo/e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/pipes/keys.pipe.ts\n            \n            pipe\n            KeysPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/express.tokens.ts\n            \n            variable\n            REQUEST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/express.tokens.ts\n            \n            variable\n            RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/server.ts\n            \n            variable\n            commonEngine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/server.ts\n            \n            variable\n            indexHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSER_VERSIONS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSER_VERSIONS_RE_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSERS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            DESKTOP_DEVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            DEVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            DEVICES_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            GENERAL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            MOBILES_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS_RE_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            TABLETS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            injectable\n            DeviceDetectorService\n            \n                34 %\n                (8/23)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            interface\n            DeviceInfo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            variable\n            iPad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/retree.ts\n            \n            class\n            ReTree\n            \n                16 %\n                (1/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~20.0.0\n        \n            @angular/common : ~20.0.0\n        \n            @angular/compiler : ~20.0.0\n        \n            @angular/core : ~20.0.0\n        \n            @angular/forms : ~20.0.0\n        \n            @angular/platform-browser : ~20.0.0\n        \n            @angular/platform-browser-dynamic : ~20.0.0\n        \n            @angular/platform-server : ~20.0.0\n        \n            @angular/router : ~20.0.0\n        \n            @angular/ssr : ^20.0.0\n        \n            conventional-changelog-cli : ~5.0.0\n        \n            express : ^4.18.2\n        \n            jest-preset-angular : ^14.5.5\n        \n            ngx-device-detector : ^8.0.0\n        \n            rxjs : ~7.8.1\n        \n            tslib : ~2.6.3\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeviceType   (projects/.../device-detector.service.ts)\n                        \n                        \n                            OrientationType   (projects/.../device-detector.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-device-detector/src/lib/device-detector.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DeviceType\n                    \n                \n                        \n                            \n                                 Mobile\n                            \n                        \n                        \n                            \n                                Value : mobile\n                            \n                        \n                        \n                            \n                                 Tablet\n                            \n                        \n                        \n                            \n                                Value : tablet\n                            \n                        \n                        \n                            \n                                 Desktop\n                            \n                        \n                        \n                            \n                                Value : desktop\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OrientationType\n                    \n                \n                        \n                            \n                                 Portrait\n                            \n                        \n                        \n                            \n                                Value : portrait\n                            \n                        \n                        \n                            \n                                 Landscape\n                            \n                        \n                        \n                            \n                                Value : landscape\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (projects/.../server.ts)\n                        \n                        \n                            run   (projects/.../server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/demo/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\n  ngx-device-detector\n\n\n\nAn Angular 6+ powered AOT compatible device detector that helps to identify browser, os and other useful information regarding the device using the app. The processing is based on user-agent. This library was built at KoderLabs, which is one of the best places I've worked at ❤️\n\n\n\n\n\n\n\n\n\n\n  Deprecated package :\n  \n  \n\n\n  New package :\n  \n  \nIf you use Angular 5, you must use v1.5.2 or earlier\n\n\nDOCS\nNgx Device Detector DOCS\nLive DEMO\nRegular Demo\n\n\nDependencies\nLatest version available for each version of Angular\n\n\n\nngx-device-detector\nAngular\n\n\n\n\n1.3.3\n7.x\n\n\n1.3.5\n8.x\n\n\n1.4.1\n9.x\n\n\n1.4.5\n10.x\n\n\n2.0.5\n11.x\n\n\n2.1.0\n12.x\n\n\n3.x.x\n13.x\n\n\n4.x.x\n14.x\n\n\n5.x.x\n15.x\n\n\n6.x.x\n16.x\n\n\n7.x.x\n17.x\n\n\n8.x.x\n18.x\n\n\n9.x.x\n19.x\n\n\n10.x.x\n20.x\n\n\n\nInstallation\nTo install this library, run:\nExample :$ npm install ngx-device-detector --saveIn your component where you want to use the Device Service\nExample :  import { Component } from '@angular/core';\n  ...\n  import { DeviceDetectorService } from 'ngx-device-detector';\n  ...\n  @Component({\n    selector: 'home',  // \n    styleUrls: [ './home.component.scss' ],\n    templateUrl: './home.component.html',\n    ...\n  })\n\n  export class HomeComponent {\n    deviceInfo = null;\n    ...\n    constructor(..., private http: Http, private deviceService: DeviceDetectorService) {\n      this.epicFunction();\n    }\n    ...\n    epicFunction() {\n      console.log('hello `Home` component');\n      this.deviceInfo = this.deviceService.getDeviceInfo();\n      const isMobile = this.deviceService.isMobile();\n      const isTablet = this.deviceService.isTablet();\n      const isDesktopDevice = this.deviceService.isDesktop();\n      console.log(this.deviceInfo);\n      console.log(isMobile);  // returns if the device is a mobile device (android / iPhone / windows-phone etc)\n      console.log(isTablet);  // returns if the device us a tablet (iPad etc)\n      console.log(isDesktopDevice); // returns if the app is running on a Desktop browser.\n    }\n    ...\n  }\nFor SSR, you have to make sure that the User Agent is available for device detection. I.e. you'll need to provide it manually. If using ExpressJS for example:\nexpress.tokens.ts\nExample :import { InjectionToken } from '@angular/core';\nimport { Request, Response } from 'express';\n\nexport const REQUEST = new InjectionToken('REQUEST');\nexport const RESPONSE = new InjectionToken('RESPONSE');universal-device-detector.service.ts:\nExample :import { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { REQUEST } from 'path/to/express.tokens';\nimport { Request } from 'express';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UniversalDeviceDetectorService extends DeviceDetectorService {\n  constructor(@Inject(PLATFORM_ID) platformId: any, @Optional() @Inject(REQUEST) request: Request) {\n    super(platformId);\n    if (isPlatformServer(platformId)) {\n      super.setDeviceInfo((request.headers['user-agent'] as string) || '');\n    }\n  }\n}app.server.module.ts:\nExample :{\n  provide: DeviceDetectorService,\n  useClass: UniversalDeviceDetectorService\n},Device service\nHolds the following properties\n\nbrowser\nos\ndevice\nuserAgent\nos_version\n\nHelper Methods\n\nisMobile() : returns if the device is a mobile device (android / iPhone/ windows-phone etc)\nisTablet() : returns if the device us a tablet (iPad etc)\nisDesktop() : returns if the app is running on a Desktop browser.\n\nDevelopment\nTo generate all *.js, *.js.map and *.d.ts files:\nExample :  $ npm run tscTo lint all *.ts files:\nExample :  $ npm run lintTo run unit tests\nExample :  $ npm run testTo build the library\nExample :  $ npm run buildRun the DEMO\nMake sure you have @angular/cli installed\nExample :  $ npm install -g @angular/cliExample :  $ cd demo\n  $ npm install\n  $ ng servethe demo will be up at localhost:4200\nChange Log\nPlease see CHANGE_LOG.md for the updates.\nCredits\nThe library is inspired by and based on the work from ng-device-detector . Also used a typescript wrapper of the amazing work in ReTree for regex based needs and an Angular2 Library Creator boilerplate to get the work started fast. I.e. Generator Angular2 library.\nLicense\nMIT\nNeed help with your Angular/Web projects\nWrite to us at IOMechs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Muhammad Ahsan Ayaz\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 10.1.0\n        \n            Keywords : angular, device, device detector, device detection, ngx-device-detector, angular device detector, angular5, angular6, angular7, angular8, angular18, angular19, angular20\n        \n            Bugs : https://github.com/AhsanAyaz/ngx-device-detector.git/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/AhsanAyaz/ngx-device-detector.git\n        \n            Author : Muhammad Ahsan Ayaz\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
